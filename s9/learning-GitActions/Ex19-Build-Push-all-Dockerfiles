# .github/workflows/simple-ci.yml

# Images building in parallel for api.Dockerfile, db.Dockerfile, frontend.Dockerfile
name: CI Workflow
on:
  push:
    branches:
      - main
jobs:
  build_image_and_push_into_dockerhub:
    name: Build images and push to DockerHub
    runs-on: [self-hosted, repo-build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Debug Docker info
        run: |
          docker --version
          sudo docker info
      
      - name: Docker login
        run: |
          echo "Logging into Docker Hub..."
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          echo "Login successful"
      
      - name: Verify login
        run: |
          sudo docker info | grep Username || echo "Login verification failed"
      
      - name: Build Docker images
        run: |
          BASE_IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_TAG=latest
          
          # Build API image
          echo "Building API Docker image: $BASE_IMAGE_NAME/app01-api:$IMAGE_TAG"
          sudo docker build -f s9/app01/api.Dockerfile -t $BASE_IMAGE_NAME/app01-api:$IMAGE_TAG s9/app01
          
          # Build Database image
          echo "Building Database Docker image: $BASE_IMAGE_NAME/app01-db:$IMAGE_TAG"
          sudo docker build -f s9/app01/db.Dockerfile -t $BASE_IMAGE_NAME/app01-db:$IMAGE_TAG s9/app01
          
          # Build Frontend image
          echo "Building Frontend Docker image: $BASE_IMAGE_NAME/app01-frontend:$IMAGE_TAG"
          sudo docker build -f s9/app01/frontend.Dockerfile -t $BASE_IMAGE_NAME/app01-frontend:$IMAGE_TAG s9/app01
          
          echo "All builds completed successfully"
      
      - name: Verify images exist
        run: |
          BASE_IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}
          echo "Verifying all images exist:"
          sudo docker images | grep "$BASE_IMAGE_NAME/app01-api" || echo "API image not found"
          sudo docker images | grep "$BASE_IMAGE_NAME/app01-db" || echo "Database image not found" 
          sudo docker images | grep "$BASE_IMAGE_NAME/app01-frontend" || echo "Frontend image not found"
      
      - name: Push Docker images
        run: |
          BASE_IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_TAG=latest
          
          # Push API image
          echo "Pushing API Docker image: $BASE_IMAGE_NAME/app01-api:$IMAGE_TAG"
          sudo docker push $BASE_IMAGE_NAME/app01-api:$IMAGE_TAG
          
          # Push Database image  
          echo "Pushing Database Docker image: $BASE_IMAGE_NAME/app01-db:$IMAGE_TAG"
          sudo docker push $BASE_IMAGE_NAME/app01-db:$IMAGE_TAG
          
          # Push Frontend image
          echo "Pushing Frontend Docker image: $BASE_IMAGE_NAME/app01-frontend:$IMAGE_TAG"
          sudo docker push $BASE_IMAGE_NAME/app01-frontend:$IMAGE_TAG
          
          echo "All pushes completed successfully"

    
      - name: Cleanup Docker to free space
        if: always()   # ensure this runs even if the job fails
        run: |
          echo "Cleaning up Docker to free disk space..."
          sudo docker system prune -af --volumes
          echo "Cleanup complete"